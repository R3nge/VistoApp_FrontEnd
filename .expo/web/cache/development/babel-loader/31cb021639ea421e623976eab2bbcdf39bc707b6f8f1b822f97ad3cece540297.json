{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MyTabBar(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    navigation = _ref.navigation;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.content,\n      children: state.routes.map(function (route, index) {\n        var options = descriptors[route.key].options;\n        var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n        var isFocused = state.index === index;\n        var onPress = function onPress() {\n          var event = navigation.emit({\n            type: 'tabPress',\n            target: route.key\n          });\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate(route.name);\n          }\n        };\n        var onLongPress = function onLongPress() {\n          navigation.emit({\n            type: 'tabLongPress',\n            target: route.key\n          });\n        };\n        return _jsx(TouchableOpacity, {\n          accessibilityRole: \"button\",\n          accessibilityState: isFocused ? {\n            selected: true\n          } : {},\n          accessibilityLabel: options.tabBarAccessibilityLabel,\n          testID: options.tabBarTestID,\n          onPress: onPress,\n          onLongPress: onLongPress,\n          style: styles.button,\n          children: _jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(View, {\n              style: {\n                width: 50,\n                height: 50,\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderRadius: 20,\n                backgroundColor: isFocused ? 'rgba(0,128,21, 0.3)' : \"transparent\"\n              },\n              children: _jsx(MaterialIcons, {\n                name: options.tabBarIcon,\n                size: isFocused ? 34 : 24,\n                color: isFocused ? '#008015' : '#222'\n              })\n            })\n          })\n        });\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  content: {\n    flexDirection: 'row',\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '75%',\n    height: 65,\n    bottom: 0,\n    marginBottom: Platform.OS === 'ios' ? 38 : 24,\n    backgroundColor: '#fff',\n    elevation: 10,\n    borderRadius: 20\n  },\n  button: {\n    flex: 1,\n    width: '10%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["MaterialIcons","jsx","_jsx","MyTabBar","_ref","state","descriptors","navigation","View","style","styles","container","children","content","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","defaultPrevented","navigate","onLongPress","TouchableOpacity","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","button","buttonContainer","width","height","justifyContent","alignItems","borderRadius","backgroundColor","tabBarIcon","size","color","StyleSheet","create","flexDirection","position","bottom","marginBottom","Platform","OS","elevation","flex"],"sources":["C:/Users/digoR/OneDrive/√Årea de Trabalho/DEV/Sollos/Deploy/visto-app/src/components/customTabBar.tsx"],"sourcesContent":["//Basic Imports\r\nimport { View, Text, StyleSheet, TouchableOpacity, Platform } from 'react-native';\r\n\r\n//Icons Imports\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nexport default function MyTabBar({ state, descriptors, navigation }: any) {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.content}>\r\n                {state.routes.map((route: any, index: any) => {\r\n                    const { options } = descriptors[route.key];\r\n                    const label =\r\n                        options.tabBarLabel !== undefined\r\n                            ? options.tabBarLabel\r\n                            : options.title !== undefined\r\n                                ? options.title\r\n                                : route.name;\r\n\r\n                    const isFocused = state.index === index;\r\n\r\n                    const onPress = () => {\r\n                        const event = navigation.emit({\r\n                            type: 'tabPress',\r\n                            target: route.key,\r\n                        });\r\n\r\n                        if (!isFocused && !event.defaultPrevented) {\r\n                            navigation.navigate(route.name);\r\n                        }\r\n                    };\r\n\r\n                    const onLongPress = () => {\r\n                        navigation.emit({\r\n                            type: 'tabLongPress',\r\n                            target: route.key,\r\n                        });\r\n                    };\r\n\r\n                    return (\r\n                        <TouchableOpacity\r\n                            accessibilityRole=\"button\"\r\n                            accessibilityState={isFocused ? { selected: true } : {}}\r\n                            accessibilityLabel={options.tabBarAccessibilityLabel}\r\n                            testID={options.tabBarTestID}\r\n                            onPress={onPress}\r\n                            onLongPress={onLongPress}\r\n                            style={styles.button}\r\n                        >\r\n                            <View style = {styles.buttonContainer}>\r\n                                <View \r\n                                    style = {\r\n                                        {\r\n                                            width: 50,\r\n                                            height: 50,\r\n                                            justifyContent: 'center',\r\n                                            alignItems: 'center',\r\n                                            borderRadius: 20,\r\n                                            backgroundColor: isFocused ? 'rgba(0,128,21, 0.3)' : \"transparent\"\r\n                                        }\r\n                                    }\r\n                                >\r\n                                    <MaterialIcons\r\n                                        name= {options.tabBarIcon}\r\n                                        size={isFocused ? 34 : 24}\r\n                                        color={isFocused ? '#008015' : '#222'}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    );\r\n                })}\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    content: {\r\n        flexDirection: 'row',\r\n        position: 'absolute',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '75%',\r\n        height: 65,\r\n        bottom: 0,\r\n        marginBottom: Platform.OS === 'ios' ? 38 : 24,\r\n        backgroundColor: '#fff',\r\n        elevation: 10,\r\n        borderRadius: 20,\r\n    },\r\n    button: {\r\n        flex: 1,\r\n        width: '10%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonContainer:{\r\n        width: '100%',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}