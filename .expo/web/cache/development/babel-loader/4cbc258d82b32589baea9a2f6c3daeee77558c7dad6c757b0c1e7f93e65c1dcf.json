{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport HeaderMain from \"../../components/headerMain\";\nimport LoginButton from \"../../components/mainButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { showMessage } from 'react-native-flash-message';\nimport DropdownInput from \"../../components/dropDownImovel\";\nimport DropDownTipoComodoInput from \"../../components/dropDownTipoComodo\";\nimport styles from \"./new_comodo.styles\";\nimport newComodoController from \"./new_comodo.controller\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewComodo() {\n  var navigation = useNavigation();\n  var notify = function notify(message) {\n    showMessage({\n      message: message,\n      type: 'danger',\n      icon: 'danger'\n    });\n  };\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    TipoValue = _useState2[0],\n    setTipoValue = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ImovelValue = _useState4[0],\n    setImovelValue = _useState4[1];\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(HeaderMain, {\n        text: \"Novo Comodo\"\n      }), _jsxs(View, {\n        style: styles.containerForm,\n        children: [_jsxs(View, {\n          style: styles.formTitle,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"Crie um C\\xF4modo\"\n          }), _jsx(Text, {\n            style: styles.subtitle,\n            children: \"Insira os dados para continuar:\"\n          })]\n        }), _jsxs(View, {\n          style: styles.form,\n          children: [_jsx(DropdownInput, {\n            onChange: function onChange(value) {\n              return setImovelValue(value);\n            }\n          }), _jsx(DropDownTipoComodoInput, {\n            onChange: function onChange(value) {\n              return setTipoValue(value);\n            }\n          }), _jsx(LoginButton, {\n            textBtn: \"Cadastrar\",\n            onPress: _asyncToGenerator(function* () {\n              console.log('Before navigation:', ImovelValue, TipoValue);\n              var success = yield newComodoController(ImovelValue, TipoValue);\n              console.log('After new imovel route:', success);\n              if (success) {\n                console.log('Imóvel cadastrado com sucesso!');\n                navigation.navigate('NewComodoSucess');\n              } else {\n                console.log('Erro ao cadastrar Imóvel!');\n                notify('Erro ao cadastrar Imóvel!');\n              }\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","ScrollView","HeaderMain","LoginButton","useNavigation","showMessage","DropdownInput","DropDownTipoComodoInput","styles","newComodoController","jsx","_jsx","jsxs","_jsxs","NewComodo","navigation","notify","message","type","icon","_useState","_useState2","_slicedToArray","TipoValue","setTipoValue","_useState3","_useState4","ImovelValue","setImovelValue","children","style","container","text","containerForm","formTitle","title","subtitle","form","onChange","value","textBtn","onPress","_asyncToGenerator","console","log","success","navigate"],"sources":["C:/Users/Pichau/Desktop/Computação/Visto-App/Front-end NOVO/VistoApp_FrontEnd/src/pages/new_comodo/new_comodo.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, ScrollView } from 'react-native';\r\nimport HeaderMain from '../../components/headerMain';\r\nimport LoginButton from '../../components/mainButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { showMessage } from 'react-native-flash-message';\r\nimport DropdownInput from '../../components/dropDownImovel';\r\nimport DropDownTipoComodoInput from '../../components/dropDownTipoComodo';\r\nimport styles from './new_comodo.styles';\r\nimport newComodoController from './new_comodo.controller';\r\n\r\nexport default function NewComodo() {\r\n    const navigation: any = useNavigation();\r\n\r\n    const notify = (message: string) => {\r\n        showMessage({\r\n            message: message,\r\n            type: 'danger',\r\n            icon: 'danger',\r\n        });\r\n    };\r\n\r\n    const [TipoValue, setTipoValue] = useState<string | null>(null);\r\n    const [ImovelValue, setImovelValue] = useState<string | null>(null);\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.container}>\r\n                <HeaderMain text=\"Novo Comodo\" />\r\n                <View style={styles.containerForm}>\r\n                    <View style={styles.formTitle}>\r\n                        <Text style={styles.title}>Crie um Cômodo</Text>\r\n                        <Text style={styles.subtitle}>\r\n                            Insira os dados para continuar:\r\n                        </Text>\r\n                    </View>\r\n                    <View style={styles.form}>\r\n                        <DropdownInput\r\n                            onChange={(value) => setImovelValue(value)}\r\n                        />\r\n                        <DropDownTipoComodoInput\r\n                            onChange={(value) => setTipoValue(value)}\r\n                        />\r\n                        <LoginButton\r\n                            textBtn=\"Cadastrar\"\r\n                            onPress={async () => {\r\n                                console.log(\r\n                                    'Before navigation:',\r\n                                    ImovelValue,\r\n                                    TipoValue\r\n                                );\r\n\r\n                                const success = await newComodoController(\r\n                                    ImovelValue,\r\n                                    TipoValue,\r\n                                );\r\n\r\n                                console.log('After new imovel route:', success);\r\n\r\n                                if (success) {\r\n                                    console.log('Imóvel cadastrado com sucesso!');\r\n                                    navigation.navigate('NewComodoSucess')\r\n                                } else {\r\n                                    console.log('Erro ao cadastrar Imóvel!');\r\n                                    notify('Erro ao cadastrar Imóvel!');\r\n                                }\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}